name: Archive Cursor Releases

on:
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新所有版本'
        required: false
        default: 'false'
      start_version:
        description: '起始版本(可选)'
        required: false
      end_version:
        description: '结束版本(可选)'
        required: false

jobs:
  archive:
    runs-on: ubuntu-latest
    steps:
      - name: Download version info
        run: |
          # 下载版本信息并格式化（添加换行）
          curl -s https://res.1073studio.com/cursor_versions.txt | sed 's/ /\n/g' > cursor_versions.txt
          
      - name: Download Files
        run: |
          mkdir -p downloads
          while IFS=, read -r date version buildid; do
            # 检查版本范围
            if [ ! -z "${{ github.event.inputs.start_version }}" ] && [ "$version" \< "${{ github.event.inputs.start_version }}" ]; then
              echo "Skipping version $version (before start version)"
              continue
            fi
            if [ ! -z "${{ github.event.inputs.end_version }}" ] && [ "$version" \> "${{ github.event.inputs.end_version }}" ]; then
              echo "Skipping version $version (after end version)"
              continue
            fi

            # 检查 release 是否已存在
            if gh release view "Cursor $version" &>/dev/null; then
              echo "Release Cursor $version already exists, checking files..."
              
              # 创建临时目录用于比较
              mkdir -p temp
              cd temp
              
              # 下载现有 release 的文件列表和大小信息
              gh release view "Cursor $version" --json assets -q '.assets[] | .name + "," + (.size|tostring)' > existing_files.txt
              
              # 下载新文件并比较大小
              need_update=false
              
              # Windows x64
              curl -L -o "Cursor Setup $version - Build $buildid-x64.exe" \
                "https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%20$version%20-%20Build%20$buildid-x64.exe"
              new_size=$(stat -f%z "Cursor Setup $version - Build $buildid-x64.exe")
              if ! grep -q "Cursor Setup $version - Build $buildid-x64.exe,$new_size" existing_files.txt; then
                need_update=true
              fi
              
              # 如果文件大小相同，跳过此版本
              if [ "$need_update" = false ]; then
                echo "Files are identical, skipping version $version"
                cd ..
                rm -rf temp
                continue
              fi
              
              cd ..
              rm -rf temp
            fi
            
            echo "Processing version $version (Build $buildid)"
            
            # Windows x64
            curl -L -o "downloads/Cursor Setup $version - Build $buildid-x64.exe" \
              "https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%20$version%20-%20Build%20$buildid-x64.exe"
            
            # Windows ARM64
            curl -L -o "downloads/Cursor Setup $version - Build $buildid-arm64.exe" \
              "https://download.todesktop.com/230313mzl4w4u92/Cursor%20Setup%20$version%20-%20Build%20$buildid-arm64.exe"
            
            # Mac Universal
            curl -L -o "downloads/Cursor Mac Installer ($buildid).zip" \
              "https://download.todesktop.com/230313mzl4w4u92/Cursor%20Mac%20Installer%20($buildid).zip"
            
            # Mac ARM64 & x64
            curl -L -o "downloads/Cursor $version - Build $buildid-arm64.dmg" \
              "https://download.todesktop.com/230313mzl4w4u92/Cursor%20$version%20-%20Build%20$buildid-arm64.dmg"
            curl -L -o "downloads/Cursor $version - Build $buildid-x64.dmg" \
              "https://download.todesktop.com/230313mzl4w4u92/Cursor%20$version%20-%20Build%20$buildid-x64.dmg"
            
            # Linux
            curl -L -o "downloads/cursor-$version-build-$buildid-x86_64.AppImage" \
              "https://download.todesktop.com/230313mzl4w4u92/cursor-$version-build-$buildid-x86_64.AppImage"
            
            # Create Release
            gh release create "Cursor $version" \
              --title "Cursor $version ($date)" \
              --notes "Build ID: $buildid
Release Date: $date" \
              "downloads/Cursor Setup $version - Build $buildid-x64.exe" \
              "downloads/Cursor Setup $version - Build $buildid-arm64.exe" \
              "downloads/Cursor Mac Installer ($buildid).zip" \
              "downloads/Cursor $version - Build $buildid-arm64.dmg" \
              "downloads/Cursor $version - Build $buildid-x64.dmg" \
              "downloads/cursor-$version-build-$buildid-x86_64.AppImage"
            
            # Clean up downloads for this version
            rm -rf downloads/*
            
          done < <(tail -r cursor_versions.txt)  # 从最旧版本开始处理
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 